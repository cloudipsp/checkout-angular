!function(){"use strict";angular.module("mx.checkout",["mx/template/checkout/form.html","mx/template/checkout/field-input.html","mx/template/checkout/modal.html"]),angular.module("mx.checkout").constant("mxCheckoutConfig",{fields:{card:{id:"card",placeholder:"Card number",pattern:"[0-9]{14,19}",icon:"glyphicon-credit-card",valid:"ccard,required"},expireMonth:{id:"expireMonth",placeholder:"MM",size:"2",pattern:"[0-9]{2}",valid:"exp_date,required",expdate:"expireYear"},expireYear:{id:"expireYear",placeholder:"YY",size:"2",pattern:"[0-9]{2}",valid:"exp_date,required",expdate:"expireMonth"},cvv:{id:"cvv",placeholder:"CVV",size:"3",pattern:"[0-9]{3}",valid:"cvv2,required"}},formMap:["card","expireMonth","expireYear","cvv"]}),angular.module("mx.checkout").directive("mxCheckout",function(){return{restrict:"A",templateUrl:"mx/template/checkout/form.html",scope:{onSubmit:"&"},controller:["$scope","mxCheckout","$element","$attrs",function(a,b,c,d){a.data=b.data,a.formSubmit=function(d){return b.formSubmit(d,a.onSubmit,c)}}]}}).directive("mxFieldInput",function(){return{restrict:"A",replace:!0,templateUrl:"mx/template/checkout/field-input.html",scope:{model:"=mxFieldInput",config:"=",formCtrl:"="},controller:["$scope","mxCheckout",function(a,b){a.blur=b.blur,a.focus=b.focus,a.valid=b.data.valid}]}}).directive("autoFocus",["$timeout",function(a){return{restrict:"A",link:function(b,c,d,e){b.$watch(d.autoFocus,function(b){angular.isDefined(b)&&b&&a(function(){c[0].focus()})},!0)}}}]).directive("mxFieldValid",["mxValidation","mxCheckout",function(a,b){return{restrict:"A",require:"ngModel",link:function(c,d,e,f){function g(a,d){a?b.data.valid.iconShow[c.config.expdate]=!1:b.data.valid.errorText[f.$name]="error "+d,f.$setValidity(d,a)}c.config.valid&&angular.forEach(c.config.valid.split(","),function(b){c.$watch(function(){return f.$modelValue},function(c){a.validate(c,b,g)},!0),f.$parsers.push(function(c){return a.validate(c,b,g),c})}),c.config.expdate&&e.$observe("expdate",function(b){a.validate(b,"exp_date",g)})}}}]),angular.module("mx.checkout").filter("trusted",["$sce",function(a){return function(b){return a.trustAsResourceUrl(b)}}]),angular.module("mx.checkout").provider("mxCheckout",function(){var a={},b={};return{options:function(c){angular.extend(b,a,c)},$get:["mxCheckoutConfig","mxModal",function(a,b){function c(a,c,d){if(a.$valid)c({formMap:f.formMap}),b.open({title:"Title",text:"Text",type:"success"},d).result.then(function(){},function(){});else{var e=!0;angular.forEach(f.config.formMap,function(b){a[b].$invalid&&(e&&(e=!1,f.valid.autoFocus[b]=+new Date),f.valid.iconShow[b]=!0)})}}function d(a){a.$invalid&&(f.valid.iconShow[a.$name]=!0)}function e(a){a.$invalid&&(f.valid.iconShow[a.$name]=!1)}var f={config:a,formMap:{},valid:{errorText:{},iconShow:{},autoFocus:{}}};return{data:f,formSubmit:c,blur:d,focus:e}}]}}).factory("mxValidation",["mxCheckout",function(a){var b=/^[0-9]+$/,c=/^[\d\-\s]+$/,d={required:function(a){var b=a.value;return!!b},ccard:function(a){if(!c.test(a.value))return!1;for(var b=0,d=0,e=!1,f=a.value.replace(/\D/g,""),g=f.length-1;g>=0;g--){var h=f.charAt(g);d=parseInt(h,10),e&&(d*=2)>9&&(d-=9),b+=d,e=!e}return b%10===0},num:function(a){return b.test(a.value)},min_length:function(a,c){return!!b.test(c)&&a.value.length>=parseInt(c,10)},cvv2:function(a){return d.num.call(this,a)&&d.min_length.call(this,a,3)},expiry:function(a,b){var c,d;return!(!a||!b)&&(!!/^\d+$/.test(a)&&(!!/^\d+$/.test(b)&&(1<=a&&a<=12&&(2===b.length&&(b=b<70?"20"+b:"19"+b),4===b.length&&(d=new Date(b,a),c=new Date,d.setMonth(d.getMonth()-1),d.setMonth(d.getMonth()+1,1),d>c)))))},exp_date:function(b){return d.expiry.call(this,a.data.formMap.expireMonth,a.data.formMap.expireYear)}};return{validate:function(a,b,c){var e=d[b]({value:a});return c(e,b),e}}}]).factory("mxModal",["$uibModal",function(a){return{open:function(b,c){return a.open({templateUrl:"mx/template/checkout/modal.html",controller:["$scope","$uibModalInstance",function(a,c){a.option=b,a.url=""}],appendTo:c})}}}]),angular.module("mx/template/checkout/field-input.html",[]).run(["$templateCache",function(a){a.put("mx/template/checkout/field-input.html",'<!--form-group-lg-->\n<!--formCtrl[config.id].$invalid && formCtrl[config.id].$touched-->\n<div class="form-group has-feedback"\n     ng-class="{\n                \'has-error\': valid.iconShow[config.id],\n                \'has-success\': formCtrl[config.id].$valid\n            }"\n>\n    <label\n            class="control-label"\n            for="{{::config.id}}"\n            ng-if="::config.label"\n    >{{::config.text}}</label>\n    <!--input-group-lg-->\n    <div class="input-group-lg" ng-class="::{\'input-group\': config.icon}">\n        <span ng-if="::config.icon" class="input-group-addon"><i class="glyphicon {{::config.icon}}"></i></span>\n        <input\n                id="{{::config.id}}"\n                name="{{::config.id}}"\n                ng-model="model[config.id]"\n                type="tel"\n                class="form-control"\n                placeholder="{{::config.placeholder}}"\n                ng-pattern="::config.pattern"\n\n                size="{{::config.size}}"\n                maxlength="{{::config.size}}"\n                autocomplete="off"\n                auto-focus="valid.autoFocus[config.id]"\n\n                mx-field-valid="config"\n                expdate="{{model[config.expdate]}}"\n\n                ng-blur="blur(formCtrl[config.id])"\n                ng-focus="focus(formCtrl[config.id])"\n\n                uib-tooltip="{{valid.errorText[config.id]}}"\n                tooltip-placement="bottom"\n                tooltip-trigger="\'focus\'"\n                tooltip-enable="{{formCtrl[config.id].$invalid}}"\n        >\n    </div>\n    <!--&& formCtrl[config.id].$touched-->\n    <span class="glyphicon glyphicon-exclamation-sign form-control-feedback"\n          ng-if="valid.iconShow[config.id]"\n    ></span>\n    <span class="glyphicon glyphicon-ok form-control-feedback" ng-if="formCtrl[config.id].$valid"></span>\n</div>')}]),angular.module("mx/template/checkout/form.html",[]).run(["$templateCache",function(a){a.put("mx/template/checkout/form.html",'<form class="asd" name="cF" ng-submit="formSubmit(cF)" novalidate>\n    <div class="card card-front">\n        <div mx-field-input="data.formMap" config="data.config.fields.card" form-ctrl="cF"></div>\n        <div class="form-group has-feedback"\n             ng-class="{\n                \'has-error\': data.valid.iconShow.expireMonth && data.valid.iconShow.expireYear,\n                \'has-success\': cF.expireMonth.$valid && cF.expireYear.$valid\n            }"\n        >\n            <label class="control-label" for="expireMonth">Valid thru</label>\n            <div class="form-inline">\n                <div mx-field-input="data.formMap" config="data.config.fields.expireMonth" form-ctrl="cF"></div>\n                <label class="expire-delimiter control-label">/</label>\n                <div mx-field-input="data.formMap" config="data.config.fields.expireYear" form-ctrl="cF"></div>\n            </div>\n        </div>\n    </div>\n    <div class="card card-back">\n        <div class="stripe"></div>\n        <div class="form-group has-feedback"\n             ng-class="{\n                \'has-error\': data.valid.iconShow.cvv,\n                \'has-success\': cF.cvv.$valid\n            }"\n        >\n            <!--<label class="control-label" for="cvv">CVV2/CVC2 code</label>-->\n            <div class="form-inline">\n                <div mx-field-input="data.formMap" config="data.config.fields.cvv" form-ctrl="cF"></div>\n            </div>\n        </div>\n    </div>\n    <button type="submit" class="btn btn-primary btn-lg">Checkout</button>\n</form>')}]),angular.module("mx/template/checkout/modal.html",[]).run(["$templateCache",function(a){a.put("mx/template/checkout/modal.html",'<div class="modal-header text-{{::option.type}}">\n    <h3 class="modal-title">{{::option.title}}</h3>\n</div>\n<div class="modal-body">\n    {{::option.text}}\n    <iframe src="{{url | trusted}}" frameborder="0"></iframe>\n</div>')}])}();